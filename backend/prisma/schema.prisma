// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL") // runtime (pooler, IPv4)
  directUrl = env("DIRECT_URL")   // migrations (direct, IPv6)
}

model User {
  id           Int              @id @default(autoincrement())
  email        String           @unique
  password     String
  name         String?  
  createdAt    DateTime         @default(now())
  organiserOf  Room[]           @relation("OrganisedRooms")
  roomsJoined  RoomParticipant[]
}

model Room {
  id           Int              @id @default(autoincrement())
  code         String           @unique
  organiserId  Int
  createdAt    DateTime         @default(now())

  organiser    User             @relation("OrganisedRooms", fields: [organiserId], references: [id])
  participants RoomParticipant[]
}

model RoomParticipant {
  id        Int      @id @default(autoincrement())
  userId    Int
  roomId    Int
  role      String   @default("participant") // or "organiser"
  joinedAt  DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
  room      Room     @relation(fields: [roomId], references: [id])

  @@unique([userId, roomId]) // A user can only join the same room once
}
